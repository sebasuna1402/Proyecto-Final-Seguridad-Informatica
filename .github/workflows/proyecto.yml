name: Proyecto CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  

jobs:
  
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

  # Job test
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    # Paso opcional para depurar: Listar paquetes instalados
    - name: List installed packages
      run: npm list

    # Ejecutar las pruebas con Mocha
    - name: Run tests
      run: npm test

  #Job Lint
  lint:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Grant execute permission for ESLint
        run: chmod +x ./node_modules/.bin/eslint

      - name: Run ESLint
        run: npm run lint -- --fix

  # Job para construir la imagen Docker 
  docker:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    
    - name: Build Docker image
      run: docker build -t enriquemr171/proyecto-app:latest .

    
    - name: Push Docker image
      run: docker push enriquemr171/proyecto-app:latest

  
  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: "proyecto-final"  
        images: "enriquemr171/proyecto-app:latest"

  security_scan:
     runs-on: ubuntu-latest
     needs: deploy
     steps:
      - name: Install Nuclei
        run: |
          curl -LO https://github.com/projectdiscovery/nuclei/releases/download/v2.9.12/nuclei_2.9.12_linux_amd64.zip
          unzip nuclei_2.9.12_linux_amd64.zip
          sudo mv nuclei /usr/local/bin/
          nuclei -version  # Verifica la instalaci√≥n de Nuclei

      - name: Run Nuclei scan
        run: |
          nuclei -u https://proyecto-final-exhqb7ehdhfffcgv.canadacentral-01.azurewebsites.net/ -o nuclei_report.txt
      - name: Upload Nuclei Report
        uses: actions/upload-artifact@v3
        with:
         name: nuclei-report
         path: nuclei_report.txt
    
